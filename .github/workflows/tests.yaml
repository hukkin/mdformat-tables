name: CI

on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
    branches: [ master ]

jobs:

  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Run pre-commit
      run: |
        pipx run pre-commit run --all-files

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation
      run: |
        pip install -r tests/requirements.txt .

    - name: Run pytest
      run: |
        pytest --cov --cov-fail-under=100

  pre-commit-hook:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Installation
      run: |
        pip install pre-commit
        pip install .

    - name: run pre-commit with plugin
      run: |
        pre-commit run --config .pre-commit-test.yaml --all-files --verbose --show-diff-on-failure

  publish:
    name: Publish to PyPi
    needs: [pre-commit, tests, pre-commit-hook]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install build and publish tools
      run: |
        pip install build twine
    - name: Build and check
      run: |
        rm -rf dist/ && python -m build
        twine check --strict dist/*
    - name: Publish
      run: |
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_KEY }}
